/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Fern from "../../../../api";
import * as core from "../../../../core";
import { SnippetTemplate } from "./SnippetTemplate";

export const VersionedSnippetTemplate: core.serialization.Schema<
    serializers.VersionedSnippetTemplate.Raw,
    Fern.VersionedSnippetTemplate
> = core.serialization
    .union("type", {
        v1: SnippetTemplate,
    })
    .transform<Fern.VersionedSnippetTemplate>({
        transform: (value) => {
            switch (value.type) {
                case "v1":
                    return Fern.VersionedSnippetTemplate.v1(value);
                default:
                    return value as Fern.VersionedSnippetTemplate;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace VersionedSnippetTemplate {
    type Raw = VersionedSnippetTemplate.V1;

    interface V1 extends SnippetTemplate.Raw {
        type: "v1";
    }
}
