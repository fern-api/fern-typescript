/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Fern from "../../../../api";
import * as core from "../../../../core";
import { PayloadInput } from "./PayloadInput";

export const EnumTemplate: core.serialization.ObjectSchema<serializers.EnumTemplate.Raw, Fern.EnumTemplate> =
    core.serialization.object({
        imports: core.serialization.list(core.serialization.string()).optional(),
        isOptional: core.serialization.boolean(),
        templateString: core.serialization.string().optional(),
        values: core.serialization.record(core.serialization.string(), core.serialization.string()),
        templateInput: PayloadInput.optional(),
    });

export declare namespace EnumTemplate {
    interface Raw {
        imports?: string[] | null;
        isOptional: boolean;
        templateString?: string | null;
        values: Record<string, string>;
        templateInput?: PayloadInput.Raw | null;
    }
}
