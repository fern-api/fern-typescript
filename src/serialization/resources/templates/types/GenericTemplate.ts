/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Fern from "../../../../api";
import * as core from "../../../../core";

export const GenericTemplate: core.serialization.ObjectSchema<serializers.GenericTemplate.Raw, Fern.GenericTemplate> =
    core.serialization.object({
        imports: core.serialization.list(core.serialization.string()).optional(),
        isOptional: core.serialization.boolean(),
        templateString: core.serialization.string(),
        templateInputs: core.serialization
            .list(core.serialization.lazy(async () => (await import("../../..")).TemplateInput))
            .optional(),
        inputDelimiter: core.serialization.string().optional(),
    });

export declare namespace GenericTemplate {
    interface Raw {
        imports?: string[] | null;
        isOptional: boolean;
        templateString: string;
        templateInputs?: serializers.TemplateInput.Raw[] | null;
        inputDelimiter?: string | null;
    }
}
