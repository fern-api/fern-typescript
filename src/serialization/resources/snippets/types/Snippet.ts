/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Fern from "../../../../api";
import * as core from "../../../../core";

export const Snippet: core.serialization.Schema<serializers.snippets.Snippet.Raw, Fern.snippets.Snippet> =
    core.serialization
        .union("type", {
            typescript: core.serialization.lazyObject(
                async () => (await import("../../..")).snippets.TypeScriptSnippet
            ),
            python: core.serialization.lazyObject(async () => (await import("../../..")).snippets.PythonSnippet),
            java: core.serialization.lazyObject(async () => (await import("../../..")).snippets.JavaSnippet),
            go: core.serialization.lazyObject(async () => (await import("../../..")).snippets.GoSnippet),
        })
        .transform<Fern.snippets.Snippet>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace Snippet {
    type Raw = Snippet.Typescript | Snippet.Python | Snippet.Java | Snippet.Go;

    interface Typescript extends serializers.snippets.TypeScriptSnippet.Raw {
        type: "typescript";
    }

    interface Python extends serializers.snippets.PythonSnippet.Raw {
        type: "python";
    }

    interface Java extends serializers.snippets.JavaSnippet.Raw {
        type: "java";
    }

    interface Go extends serializers.snippets.GoSnippet.Raw {
        type: "go";
    }
}
