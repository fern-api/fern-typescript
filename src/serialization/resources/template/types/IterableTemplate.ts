/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Fern from "../../../../api";
import * as core from "../../../../core";
import { PayloadInput } from "./PayloadInput";

export const IterableTemplate: core.serialization.ObjectSchema<
    serializers.IterableTemplate.Raw,
    Fern.IterableTemplate
> = core.serialization.object({
    imports: core.serialization.list(core.serialization.string()).optional(),
    isOptional: core.serialization.boolean(),
    containerTemplateString: core.serialization.string(),
    delimiter: core.serialization.string(),
    innerTemplate: core.serialization.lazy(async () => (await import("../../..")).Template),
    templateInput: PayloadInput.optional(),
});

export declare namespace IterableTemplate {
    interface Raw {
        imports?: string[] | null;
        isOptional: boolean;
        containerTemplateString: string;
        delimiter: string;
        innerTemplate: serializers.Template.Raw;
        templateInput?: PayloadInput.Raw | null;
    }
}
