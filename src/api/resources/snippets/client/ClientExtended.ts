/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Fern from "../../..";
import * as serializers from "../../../../serialization";
import urlJoin from "url-join";
import * as errors from "../../../../errors";
import { Snippets } from "./Client";


export class SnippetsExtended {
    constructor(protected readonly _options: Snippets.Options = {}) {}

    // Get template
    // Use template resolver to populate it
    // Do some memoization of it
    // Return

    // Expose a populate template function as well
    // So the caller can
    // f.template.get()
    // f.template.populate()
    


    protected async _getAuthorizationHeader() {
        const bearer = await core.Supplier.get(this._options.token);
        if (bearer != null) {
            return `Bearer ${bearer}`;
        }

        return undefined;
    }
}
